/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Database.databaseManager;
import beanClasses.accountBean;
import beanClasses.customerBean;
import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author HP
 */
public class accountFrame extends javax.swing.JFrame {

    /**
     * Creates new form accountFrame
     */
    public accountFrame() {
        initComponents();
        accountTypeC.addItem("saving");
        accountTypeC.addItem("current");
        accountTypeC.addItem("pls");
        getCustomer();
    }
     
    private void addRecord(){
         customerBean bean=(customerBean)customerC.getSelectedItem();
         if(bean==null)return;
      
      int  accountNo = Integer.parseInt( accountNoTF.getText());
       int pinCode = Integer.parseInt(pinCodeTF.getText());
        String  accountType =(String)accountTypeC.getSelectedItem();
       String  dateOfCreate = dateOfCreateTF.getText();
      String   remarks =remarksTA.getText();
        
         
        
          try{
                int rows=databaseManager.addAccount(bean.getCutomerId(),accountNo,pinCode,dateOfCreate,accountType,remarks);
                if(rows>=1)
                    JOptionPane.showMessageDialog(this, rows+"Record Insert ");
                clear();
                getAccount();
            }catch(Exception e){
                   JOptionPane.showMessageDialog(this,"Error"+e.getMessage());
                   e.printStackTrace();
            }
    }
     
      private void updateRecord(){
         accountBean bean=(accountBean)accountNoL.getSelectedValue();
         if(bean==null)return;
      
      int  accountNo = Integer.parseInt( accountNoTF.getText());
       int pinCode = Integer.parseInt(pinCodeTF.getText());
        //String  accountType =accountTypeTF.getText();
        String  accountType =(String)accountTypeC.getSelectedItem();
       String  dateOfCreate = dateOfCreateTF.getText();
      String   remarks =remarksTA.getText();
        
         
        
          try{
                int rows=databaseManager.updateAccount(bean.getCustomerId(),bean.getAccountId(),accountNo,pinCode,dateOfCreate,accountType,remarks);
                if(rows>=1)
                    JOptionPane.showMessageDialog(this, rows+"Record Insert ");
                clear();
                getAccount();
            }catch(Exception e){
                   JOptionPane.showMessageDialog(this,"Error"+e.getMessage());
                   e.printStackTrace();
            }
    }
      private void deleteRecord(){
    accountBean bean=(accountBean)accountNoL.getSelectedValue();
    if(bean==null)return;
    try{
        int rows = databaseManager.deleteAccount(bean.getAccountId());
          if(rows>=1)
                    JOptionPane.showMessageDialog(this, rows+" Delete ");
                clear();
                getAccount();
            }catch(Exception e){
                   JOptionPane.showMessageDialog(this,"Error"+e.getMessage());
                   e.printStackTrace();
            }
         }
    private void clear(){
   
        
        accountIdTF.setText("");
        accountNoTF.setText("");
        pinCodeTF.setText("");
        //accountTypeTF.setText("");
        dateOfCreateTF.setText("");
        remarksTA.setText("");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        accountTypeC = new javax.swing.JComboBox();
        accountNoTF = new javax.swing.JTextField();
        pinCodeTF = new javax.swing.JTextField();
        accountIdTF = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        remarksTA = new javax.swing.JTextArea();
        clearB = new javax.swing.JButton();
        deleteB = new javax.swing.JButton();
        backB = new javax.swing.JButton();
        updateB = new javax.swing.JButton();
        addB = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        accountNoL = new javax.swing.JList();
        jLabel9 = new javax.swing.JLabel();
        dateOfCreateTF = new javax.swing.JTextField();
        customerC = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        amountTF = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ACCOUNT");
        setMinimumSize(new java.awt.Dimension(980, 600));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("ACCOUNT NO");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(200, 210, 90, 40);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("ACCOUNT  ID");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(200, 160, 90, 40);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("ACCOUNT TYPE");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(390, 260, 100, 40);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("PIN CODE");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(200, 260, 90, 40);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setText("CUSTOMER");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(200, 110, 90, 40);

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setText("REMARKS");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(230, 380, 60, 15);

        jLabel7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel7.setText("ACCOUNT NO");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(620, 90, 80, 20);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setText("ACCOUNT");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(470, 20, 60, 15);

        accountTypeC.setEditable(true);
        accountTypeC.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        accountTypeC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountTypeCActionPerformed(evt);
            }
        });
        getContentPane().add(accountTypeC);
        accountTypeC.setBounds(490, 260, 130, 40);

        accountNoTF.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        getContentPane().add(accountNoTF);
        accountNoTF.setBounds(290, 210, 330, 40);

        pinCodeTF.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        getContentPane().add(pinCodeTF);
        pinCodeTF.setBounds(290, 260, 90, 40);

        accountIdTF.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        getContentPane().add(accountIdTF);
        accountIdTF.setBounds(290, 160, 90, 40);

        remarksTA.setColumns(20);
        remarksTA.setRows(5);
        jScrollPane1.setViewportView(remarksTA);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(290, 380, 550, 80);

        clearB.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        clearB.setText("CLEARE");
        clearB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBActionPerformed(evt);
            }
        });
        getContentPane().add(clearB);
        clearB.setBounds(530, 470, 80, 30);

        deleteB.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        deleteB.setText("DELETE");
        deleteB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBActionPerformed(evt);
            }
        });
        getContentPane().add(deleteB);
        deleteB.setBounds(660, 470, 80, 30);

        backB.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        backB.setText("BACK");
        backB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backBMouseClicked(evt);
            }
        });
        backB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBActionPerformed(evt);
            }
        });
        getContentPane().add(backB);
        backB.setBounds(770, 470, 70, 30);

        updateB.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        updateB.setText("UPDATE");
        updateB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBActionPerformed(evt);
            }
        });
        getContentPane().add(updateB);
        updateB.setBounds(420, 470, 79, 30);

        addB.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        addB.setText("ADD");
        addB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBActionPerformed(evt);
            }
        });
        getContentPane().add(addB);
        addB.setBounds(290, 470, 70, 30);

        accountNoL.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        accountNoL.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                accountNoLValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(accountNoL);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(630, 110, 210, 250);

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setText("DATE OF CREATE");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(190, 320, 100, 40);

        dateOfCreateTF.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        getContentPane().add(dateOfCreateTF);
        dateOfCreateTF.setBounds(290, 320, 150, 40);

        customerC.setEditable(true);
        customerC.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        customerC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerCActionPerformed(evt);
            }
        });
        getContentPane().add(customerC);
        customerC.setBounds(290, 110, 330, 40);

        jLabel10.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel10.setText("AMOUNT");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(410, 160, 60, 40);

        amountTF.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        amountTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountTFActionPerformed(evt);
            }
        });
        getContentPane().add(amountTF);
        amountTF.setBounds(490, 160, 130, 40);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBActionPerformed
        hide();
    }//GEN-LAST:event_backBActionPerformed

    private void accountTypeCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountTypeCActionPerformed
        // TODO add your handling cod.set here:
       
    }//GEN-LAST:event_accountTypeCActionPerformed

    private void accountNoLValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_accountNoLValueChanged
        
        accountBean bean=(accountBean)accountNoL.getSelectedValue();
        if(bean==null)return;
        java.text.SimpleDateFormat f = new java.text.SimpleDateFormat("dd-MMM-yyyy");
             String d="";
             if(bean.getDateOfCreate()!=null)
                d=f.format(bean.getDateOfCreate());
        accountIdTF.setText(""+bean.getAccountId());
        accountNoTF.setText(""+bean.getAccountNo());
        pinCodeTF.setText(""+bean.getPinCode());
        accountTypeC.setSelectedItem(bean.getAccountType());
        dateOfCreateTF.setText(d);
        remarksTA.setText(bean.getRemarks());
        
    }//GEN-LAST:event_accountNoLValueChanged

    private void addBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBActionPerformed
        addRecord();
    }//GEN-LAST:event_addBActionPerformed

    private void updateBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBActionPerformed
        // TODO add your handling code here:
        updateRecord();
    }//GEN-LAST:event_updateBActionPerformed

    private void clearBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_clearBActionPerformed

    private void deleteBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBActionPerformed
        deleteRecord();
    }//GEN-LAST:event_deleteBActionPerformed

    private void customerCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerCActionPerformed
        // TODO add your handling code here:
        getAccount();
    }//GEN-LAST:event_customerCActionPerformed

    private void amountTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountTFActionPerformed

    private void backBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBMouseClicked
    Bank ob = new Bank();
    ob.setVisible(true);
    dispose();
    }//GEN-LAST:event_backBMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(accountFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(accountFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(accountFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(accountFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new accountFrame().setVisible(true);
            }
        });
    }
    private void getCustomer(){
      
    try{
        Vector v=databaseManager.getCustomer();
       customerC.removeAllItems();
           for(int i=0; i<v.size();  i++ ){ 
        customerBean  bean =(customerBean)v.elementAt(i);
        customerC.addItem(bean);
    } 

    }catch(Exception e){
        e.printStackTrace ();
      JOptionPane.showMessageDialog(this,"Error"+e.getMessage());
    
    }      
    }
    private void getAccount(){
            customerBean bean = (customerBean)customerC.getSelectedItem();
           if(bean==null)return;
           try{
               Vector v = databaseManager.getAccount(bean.getCutomerId());
               accountNoL.setListData(v);
           }catch(Exception e){
              e.printStackTrace();
              JOptionPane.showMessageDialog(this,"Error"+e.getMessage());
           }
       } 
       
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accountIdTF;
    private javax.swing.JList accountNoL;
    private javax.swing.JTextField accountNoTF;
    private javax.swing.JComboBox accountTypeC;
    private javax.swing.JButton addB;
    private javax.swing.JTextField amountTF;
    private javax.swing.JButton backB;
    private javax.swing.JButton clearB;
    private javax.swing.JComboBox customerC;
    private javax.swing.JTextField dateOfCreateTF;
    private javax.swing.JButton deleteB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField pinCodeTF;
    private javax.swing.JTextArea remarksTA;
    private javax.swing.JButton updateB;
    // End of variables declaration//GEN-END:variables
}
